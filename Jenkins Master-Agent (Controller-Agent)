Certainly! Here’s a **step-by-step process to set up Jenkins with a master-agent (controller-agent) architecture**, starting from server creation. This guide is platform-agnostic (works for AWS, Azure, GCP, or on-premises VMs), and you can adapt details to your environment.

---

## **1. Plan Your Architecture**
- Decide how many servers you need:  
  - **1 Jenkins Controller (Master)**
  - **1 or more Jenkins Agents**
- Decide OS (commonly Ubuntu Server LTS or CentOS/RHEL for both controller and agents).

---

## **2. Provision Servers**
### a. **Cloud (AWS/Azure/GCP)**
- **Create VMs** for controller and each agent.
- Choose appropriate instance type (start with t3.medium or equivalent for controller).
- Assign static internal IPs or use DNS.
- Open required ports (8080 for Jenkins, 22 for SSH).

### b. **On-premises**
- Provision physical or virtual machines.
- Ensure network connectivity between controller and agents.

---

## **3. Configure Operating System**
- **Update system packages:**
  ```sh
  sudo apt update && sudo apt upgrade -y    # Ubuntu/Debian
  sudo yum update -y                        # CentOS/RHEL
  ```
- **Set hostname** and (optional) configure DNS.
- **Install Java (Jenkins prerequisite):**
  ```sh
  sudo apt install openjdk-17-jdk -y        # Ubuntu/Debian
  sudo yum install java-17-openjdk -y       # CentOS/RHEL
  java -version                             # Verify installation
  ```

---

## **4. Install Jenkins Controller**
- **Add the Jenkins repo and install Jenkins:**
  ```sh
  # Ubuntu/Debian
  wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -
  sudo sh -c 'echo deb https://pkg.jenkins.io/debian binary/ > /etc/apt/sources.list.d/jenkins.list'
  sudo apt update
  sudo apt install jenkins -y

  # CentOS/RHEL
  sudo wget -O /etc/yum.repos.d/jenkins.repo https://pkg.jenkins.io/redhat-stable/jenkins.repo
  sudo rpm --import https://pkg.jenkins.io/redhat-stable/jenkins.io.key
  sudo yum install jenkins -y
  ```

- **Start Jenkins:**
  ```sh
  sudo systemctl start jenkins
  sudo systemctl enable jenkins
  ```

- **Open firewall:**
  ```sh
  sudo ufw allow 8080/tcp   # Ubuntu
  sudo firewall-cmd --add-port=8080/tcp --permanent; sudo firewall-cmd --reload  # CentOS
  ```

---

## **5. Initial Jenkins Setup**
- Access Jenkins at: `http://<controller-ip>:8080`
- Get the initial admin password:
  ```sh
  sudo cat /var/lib/jenkins/secrets/initialAdminPassword
  ```
- Complete the setup wizard (install suggested plugins, create first admin user).

---

## **6. Prepare and Configure Jenkins Agent(s)**
### a. **Create Agent Server(s)**
- Provision and configure OS as above.
- Install Java as above.

### b. **Add Agent in Jenkins UI**
- In Jenkins controller, go to **Manage Jenkins → Manage Nodes and Clouds → New Node**
- Enter node name, select “Permanent Agent”, and fill details:
  - **Remote root directory** (e.g., `/home/jenkins`)
  - **Labels** (e.g., `linux`, `build`)
  - **Launch method:** Most common is “Launch agent via SSH” (requires SSH access).

### c. **Configure SSH Key (If using SSH launch)**
- On controller, generate SSH key (if not already):
  ```sh
  ssh-keygen -t rsa -b 4096 -f ~/.ssh/jenkins_agent_key
  ```
- Copy the **public key** (`jenkins_agent_key.pub`) to agent’s `~/.ssh/authorized_keys` for the Jenkins user.

- In Jenkins node config, specify:
  - Host (agent IP)
  - Credentials (add the private key as a Jenkins credential)

### d. **Alternatively, Use JNLP/Agent.jar**
- Download agent.jar from Jenkins UI to agent machine.
- Run:
  ```sh
  java -jar agent.jar -jnlpUrl <url_provided_by_jenkins> -secret <secret> -workDir "/home/jenkins"
  ```

---

## **7. Test the Architecture**
- On the controller UI, check that agents are **online**.
- Create a simple freestyle or pipeline job and assign it to an agent using labels.
- Run the job to confirm the build executes on the agent.

---

## **8. (Optional) Secure Jenkins**
- Enable HTTPS (reverse proxy or direct).
- Setup LDAP/SSO authentication for enterprise use.
- Apply role-based access controls.

---

## **Summary Flow**
1. Plan
2. Provision servers (controller + agents)
3. Install Java
4. Install Jenkins on controller
5. Web setup of Jenkins
6. Add/configure agents (via SSH or JNLP)
7. Test agent connectivity and builds
8. Secure Jenkins

